// @ts-nocheck
// Generated from grammars/UQMCommSourceData.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class UQMCommSourceDataLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly HASH = 2;
	public static readonly AT = 3;
	public static readonly SLASH = 4;
	public static readonly ASTERISK = 5;
	public static readonly COMMA = 6;
	public static readonly BINARY_OR = 7;
	public static readonly BITSHIFT = 8;
	public static readonly BRACE_OPEN = 9;
	public static readonly BRACE_CLOSE = 10;
	public static readonly BLOCK_BEGIN = 11;
	public static readonly BLOCK_END = 12;
	public static readonly SEMICOLON = 13;
	public static readonly COLON = 14;
	public static readonly WHITESPACE_OR_NEWLINE = 15;
	public static readonly WHITESPACE = 16;
	public static readonly ANIMATION_TYPE = 17;
	public static readonly ANIMATION_FLAG = 18;
	public static readonly NEWLINE = 19;
	public static readonly SOMETHING = 20;
	public static readonly WORD = 21;
	public static readonly INT = 22;
	public static readonly FLOAT = 23;
	public static readonly BEGIN_LOCDATA = 24;
	public static readonly COMMENT_START = 25;
	public static readonly ML_COMMENT_BEGIN = 26;
	public static readonly ML_COMMENT_END = 27;
	public static readonly MULTILINE_COMMENT = 28;
	public static readonly COMMENT = 29;
	public static readonly REST = 30;
	public static readonly INCLUDE = 31;
	public static readonly NULL = 32;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "LOWERCASE", "UPPERCASE", "NUM", "NEGATIVE", "HASH", "AT", "SLASH", 
		"ASTERISK", "COMMA", "BINARY_OR", "BITSHIFT", "BRACE_OPEN", "BRACE_CLOSE", 
		"BLOCK_BEGIN", "BLOCK_END", "SEMICOLON", "COLON", "WHITESPACE_OR_NEWLINE", 
		"WHITESPACE", "ANIMATION_TYPE", "ANIMATION_FLAG", "NEWLINE", "SOMETHING", 
		"WORD", "INT", "FLOAT", "BEGIN_LOCDATA", "COMMENT_START", "ML_COMMENT_BEGIN", 
		"ML_COMMENT_END", "MULTILINE_COMMENT", "COMMENT", "REST", "INCLUDE", "NULL",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'='", "'#'", "'@'", "'/'", "'*'", "','", "'|'", "'<<'", "'('", 
		"')'", "'{'", "'}'", "';'", "':'", undefined, undefined, undefined, "'WAIT_TALKING'", 
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, undefined, undefined, "'NULL'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, "HASH", "AT", "SLASH", "ASTERISK", "COMMA", "BINARY_OR", 
		"BITSHIFT", "BRACE_OPEN", "BRACE_CLOSE", "BLOCK_BEGIN", "BLOCK_END", "SEMICOLON", 
		"COLON", "WHITESPACE_OR_NEWLINE", "WHITESPACE", "ANIMATION_TYPE", "ANIMATION_FLAG", 
		"NEWLINE", "SOMETHING", "WORD", "INT", "FLOAT", "BEGIN_LOCDATA", "COMMENT_START", 
		"ML_COMMENT_BEGIN", "ML_COMMENT_END", "MULTILINE_COMMENT", "COMMENT", 
		"REST", "INCLUDE", "NULL",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(UQMCommSourceDataLexer._LITERAL_NAMES, UQMCommSourceDataLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return UQMCommSourceDataLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(UQMCommSourceDataLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "UQMCommSourceData.g4"; }

	// @Override
	public get ruleNames(): string[] { return UQMCommSourceDataLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return UQMCommSourceDataLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return UQMCommSourceDataLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return UQMCommSourceDataLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\"\u0149\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03\r\x03\r\x03\x0E\x03" +
		"\x0E\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03" +
		"\x13\x03\x13\x03\x14\x03\x14\x06\x14s\n\x14\r\x14\x0E\x14t\x03\x15\x03" +
		"\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x16\x03\x16\x03\x16\x03\x16\x05\x16\xA9\n\x16\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x18\x05\x18\xB9\n\x18\x03\x18\x03\x18\x06\x18\xBD\n\x18\r" +
		"\x18\x0E\x18\xBE\x03\x19\x03\x19\x05\x19\xC3\n\x19\x03\x1A\x03\x1A\x05" +
		"\x1A\xC7\n\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x06\x1A\xCD\n\x1A\r\x1A" +
		"\x0E\x1A\xCE\x03\x1B\x05\x1B\xD2\n\x1B\x03\x1B\x06\x1B\xD5\n\x1B\r\x1B" +
		"\x0E\x1B\xD6\x03\x1C\x05\x1C\xDA\n\x1C\x03\x1C\x03\x1C\x06\x1C\xDE\n\x1C" +
		"\r\x1C\x0E\x1C\xDF\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03" +
		"\x1D\x03\x1D\x06\x1D\xEA\n\x1D\r\x1D\x0E\x1D\xEB\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1F" +
		"\x03\x1F\x03\x1F\x03 \x03 \x03 \x03!\x03!\x07!\u0101\n!\f!\x0E!\u0104" +
		"\v!\x03!\x03!\x03!\x03!\x03\"\x03\"\x06\"\u010C\n\"\r\"\x0E\"\u010D\x03" +
		"\"\x03\"\x03\"\x03\"\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x03#\x06#\u011C" +
		"\n#\r#\x0E#\u011D\x03#\x03#\x03#\x03#\x03#\x03#\x07#\u0126\n#\f#\x0E#" +
		"\u0129\v#\x03#\x03#\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$\x03$" +
		"\x06$\u0137\n$\r$\x0E$\u0138\x03$\x07$\u013C\n$\f$\x0E$\u013F\v$\x03$" +
		"\x03$\x03$\x03$\x03%\x03%\x03%\x03%\x03%\x04\u0102\u013D\x02\x02&\x03" +
		"\x02\x03\x05\x02\x02\x07\x02\x02\t\x02\x02\v\x02\x02\r\x02\x04\x0F\x02" +
		"\x05\x11\x02\x06\x13\x02\x07\x15\x02\b\x17\x02\t\x19\x02\n\x1B\x02\v\x1D" +
		"\x02\f\x1F\x02\r!\x02\x0E#\x02\x0F%\x02\x10\'\x02\x11)\x02\x12+\x02\x13" +
		"-\x02\x14/\x02\x151\x02\x163\x02\x175\x02\x187\x02\x199\x02\x1A;\x02\x1B" +
		"=\x02\x1C?\x02\x1DA\x02\x1EC\x02\x1FE\x02 G\x02!I\x02\"\x03\x02\b\x03" +
		"\x02c|\x03\x02C\\\x03\x022;\x04\x02\v\v\"\"\x04\x02/0aa\x03\x02\f\f\x02" +
		"\u015E\x02\x03\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02" +
		"\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02" +
		"\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02" +
		"\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02" +
		"\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02" +
		")\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02" +
		"\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02" +
		"\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03" +
		"\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02" +
		"\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x03" +
		"K\x03\x02\x02\x02\x05M\x03\x02\x02\x02\x07O\x03\x02\x02\x02\tQ\x03\x02" +
		"\x02\x02\vS\x03\x02\x02\x02\rU\x03\x02\x02\x02\x0FW\x03\x02\x02\x02\x11" +
		"Y\x03\x02\x02\x02\x13[\x03\x02\x02\x02\x15]\x03\x02\x02\x02\x17_\x03\x02" +
		"\x02\x02\x19a\x03\x02\x02\x02\x1Bd\x03\x02\x02\x02\x1Df\x03\x02\x02\x02" +
		"\x1Fh\x03\x02\x02\x02!j\x03\x02\x02\x02#l\x03\x02\x02\x02%n\x03\x02\x02" +
		"\x02\'r\x03\x02\x02\x02)v\x03\x02\x02\x02+\xA8\x03\x02\x02\x02-\xAA\x03" +
		"\x02\x02\x02/\xBC\x03\x02\x02\x021\xC2\x03\x02\x02\x023\xC6\x03\x02\x02" +
		"\x025\xD1\x03\x02\x02\x027\xD9\x03\x02\x02\x029\xE1\x03\x02\x02\x02;\xF5" +
		"\x03\x02\x02\x02=\xF8\x03\x02\x02\x02?\xFB\x03\x02\x02\x02A\xFE\x03\x02" +
		"\x02\x02C\u0109\x03\x02\x02\x02E\u0113\x03\x02\x02\x02G\u012C\x03\x02" +
		"\x02\x02I\u0144\x03\x02\x02\x02KL\x07?\x02\x02L\x04\x03\x02\x02\x02MN" +
		"\t\x02\x02\x02N\x06\x03\x02\x02\x02OP\t\x03\x02\x02P\b\x03\x02\x02\x02" +
		"QR\t\x04\x02\x02R\n\x03\x02\x02\x02ST\x07/\x02\x02T\f\x03\x02\x02\x02" +
		"UV\x07%\x02\x02V\x0E\x03\x02\x02\x02WX\x07B\x02\x02X\x10\x03\x02\x02\x02" +
		"YZ\x071\x02\x02Z\x12\x03\x02\x02\x02[\\\x07,\x02\x02\\\x14\x03\x02\x02" +
		"\x02]^\x07.\x02\x02^\x16\x03\x02\x02\x02_`\x07~\x02\x02`\x18\x03\x02\x02" +
		"\x02ab\x07>\x02\x02bc\x07>\x02\x02c\x1A\x03\x02\x02\x02de\x07*\x02\x02" +
		"e\x1C\x03\x02\x02\x02fg\x07+\x02\x02g\x1E\x03\x02\x02\x02hi\x07}\x02\x02" +
		"i \x03\x02\x02\x02jk\x07\x7F\x02\x02k\"\x03\x02\x02\x02lm\x07=\x02\x02" +
		"m$\x03\x02\x02\x02no\x07<\x02\x02o&\x03\x02\x02\x02ps\x05)\x15\x02qs\x05" +
		"/\x18\x02rp\x03\x02\x02\x02rq\x03\x02\x02\x02st\x03\x02\x02\x02tr\x03" +
		"\x02\x02\x02tu\x03\x02\x02\x02u(\x03\x02\x02\x02vw\t\x05\x02\x02w*\x03" +
		"\x02\x02\x02xy\x07[\x02\x02yz\x07Q\x02\x02z{\x07[\x02\x02{|\x07Q\x02\x02" +
		"|}\x07a\x02\x02}~\x07C\x02\x02~\x7F\x07P\x02\x02\x7F\x80\x07K\x02\x02" +
		"\x80\xA9\x07O\x02\x02\x81\x82\x07E\x02\x02\x82\x83\x07K\x02\x02\x83\x84" +
		"\x07T\x02\x02\x84\x85\x07E\x02\x02\x85\x86\x07W\x02\x02\x86\x87\x07N\x02" +
		"\x02\x87\x88\x07C\x02\x02\x88\x89\x07T\x02\x02\x89\x8A\x07a\x02\x02\x8A" +
		"\x8B\x07C\x02\x02\x8B\x8C\x07P\x02\x02\x8C\x8D\x07K\x02\x02\x8D\xA9\x07" +
		"O\x02\x02\x8E\x8F\x07T\x02\x02\x8F\x90\x07C\x02\x02\x90\x91\x07P\x02\x02" +
		"\x91\x92\x07F\x02\x02\x92\x93\x07Q\x02\x02\x93\x94\x07O\x02\x02\x94\x95" +
		"\x07a\x02\x02\x95\x96\x07C\x02\x02\x96\x97\x07P\x02\x02\x97\x98\x07K\x02" +
		"\x02\x98\xA9\x07O\x02\x02\x99\x9A\x07D\x02\x02\x9A\x9B\x07C\x02\x02\x9B" +
		"\x9C\x07E\x02\x02\x9C\x9D\x07M\x02\x02\x9D\x9E\x07I\x02\x02\x9E\x9F\x07" +
		"T\x02\x02\x9F\xA0\x07Q\x02\x02\xA0\xA1\x07W\x02\x02\xA1\xA2\x07P\x02\x02" +
		"\xA2\xA3\x07F\x02\x02\xA3\xA4\x07a\x02\x02\xA4\xA5\x07C\x02\x02\xA5\xA6" +
		"\x07P\x02\x02\xA6\xA7\x07K\x02\x02\xA7\xA9\x07O\x02\x02\xA8x\x03\x02\x02" +
		"\x02\xA8\x81\x03\x02\x02\x02\xA8\x8E\x03\x02\x02\x02\xA8\x99\x03\x02\x02" +
		"\x02\xA9,\x03\x02\x02\x02\xAA\xAB\x07Y\x02\x02\xAB\xAC\x07C\x02\x02\xAC" +
		"\xAD\x07K\x02\x02\xAD\xAE\x07V\x02\x02\xAE\xAF\x07a\x02\x02\xAF\xB0\x07" +
		"V\x02\x02\xB0\xB1\x07C\x02\x02\xB1\xB2\x07N\x02\x02\xB2\xB3\x07M\x02\x02" +
		"\xB3\xB4\x07K\x02\x02\xB4\xB5\x07P\x02\x02\xB5\xB6\x07I\x02\x02\xB6.\x03" +
		"\x02\x02\x02\xB7\xB9\x07\x0F\x02\x02\xB8\xB7\x03\x02\x02\x02\xB8\xB9\x03" +
		"\x02\x02\x02\xB9\xBA\x03\x02\x02\x02\xBA\xBD\x07\f\x02\x02\xBB\xBD\x07" +
		"\x0F\x02\x02\xBC\xB8\x03\x02\x02\x02\xBC\xBB\x03\x02\x02\x02\xBD\xBE\x03" +
		"\x02\x02\x02\xBE\xBC\x03\x02\x02\x02\xBE\xBF\x03\x02\x02\x02\xBF0\x03" +
		"\x02\x02\x02\xC0\xC3\x05I%\x02\xC1\xC3\x053\x1A\x02\xC2\xC0\x03\x02\x02" +
		"\x02\xC2\xC1\x03\x02\x02\x02\xC32\x03\x02\x02\x02\xC4\xC7\x05\x05\x03" +
		"\x02\xC5\xC7\x05\x07\x04\x02\xC6\xC4\x03\x02\x02\x02\xC6\xC5\x03\x02\x02" +
		"\x02\xC7\xCC\x03\x02\x02\x02\xC8\xCD\x05\x05\x03\x02\xC9\xCD\x05\x07\x04" +
		"\x02\xCA\xCD\x05\t\x05\x02\xCB\xCD\t\x06\x02\x02\xCC\xC8\x03\x02\x02\x02" +
		"\xCC\xC9\x03\x02\x02\x02\xCC\xCA\x03\x02\x02\x02\xCC\xCB\x03\x02\x02\x02" +
		"\xCD\xCE\x03\x02\x02\x02\xCE\xCC\x03\x02\x02\x02\xCE\xCF\x03\x02\x02\x02" +
		"\xCF4\x03\x02\x02\x02\xD0\xD2\x05\v\x06\x02\xD1\xD0\x03\x02\x02\x02\xD1" +
		"\xD2\x03\x02\x02\x02\xD2\xD4\x03\x02\x02\x02\xD3\xD5\x05\t\x05\x02\xD4" +
		"\xD3\x03\x02\x02\x02\xD5\xD6\x03\x02\x02\x02\xD6\xD4\x03\x02\x02\x02\xD6" +
		"\xD7\x03\x02\x02\x02\xD76\x03\x02\x02\x02\xD8\xDA\x05\v\x06\x02\xD9\xD8" +
		"\x03\x02\x02\x02\xD9\xDA\x03\x02\x02\x02\xDA\xDD\x03\x02\x02\x02\xDB\xDE" +
		"\x05\t\x05\x02\xDC\xDE\x070\x02\x02\xDD\xDB\x03\x02\x02\x02\xDD\xDC\x03" +
		"\x02\x02\x02\xDE\xDF\x03\x02\x02\x02\xDF\xDD\x03\x02\x02\x02\xDF\xE0\x03" +
		"\x02\x02\x02\xE08\x03\x02\x02\x02\xE1\xE2\x07u\x02\x02\xE2\xE3\x07v\x02" +
		"\x02\xE3\xE4\x07c\x02\x02\xE4\xE5\x07v\x02\x02\xE5\xE6\x07k\x02\x02\xE6" +
		"\xE7\x07e\x02\x02\xE7\xE9\x03\x02\x02\x02\xE8\xEA\x05)\x15\x02\xE9\xE8" +
		"\x03\x02\x02\x02\xEA\xEB\x03\x02\x02\x02\xEB\xE9\x03\x02\x02\x02\xEB\xEC" +
		"\x03\x02\x02\x02\xEC\xED\x03\x02\x02\x02\xED\xEE\x07N\x02\x02\xEE\xEF" +
		"\x07Q\x02\x02\xEF\xF0\x07E\x02\x02\xF0\xF1\x07F\x02\x02\xF1\xF2\x07C\x02" +
		"\x02\xF2\xF3\x07V\x02\x02\xF3\xF4\x07C\x02\x02\xF4:\x03\x02\x02\x02\xF5" +
		"\xF6\x05\x11\t\x02\xF6\xF7\x05\x11\t\x02\xF7<\x03\x02\x02\x02\xF8\xF9" +
		"\x05\x11\t\x02\xF9\xFA\x05\x13\n\x02\xFA>\x03\x02\x02\x02\xFB\xFC\x05" +
		"\x13\n\x02\xFC\xFD\x05\x11\t\x02\xFD@\x03\x02\x02\x02\xFE\u0102\x05=\x1F" +
		"\x02\xFF\u0101\v\x02\x02\x02\u0100\xFF\x03\x02\x02\x02\u0101\u0104\x03" +
		"\x02\x02\x02\u0102\u0103\x03\x02\x02\x02\u0102\u0100\x03\x02\x02\x02\u0103" +
		"\u0105\x03\x02\x02\x02\u0104\u0102\x03\x02\x02\x02\u0105\u0106\x05? \x02" +
		"\u0106\u0107\x03\x02\x02\x02\u0107\u0108\b!\x02\x02\u0108B\x03\x02\x02" +
		"\x02\u0109\u010B\x05;\x1E\x02\u010A\u010C\n\x07\x02\x02\u010B\u010A\x03" +
		"\x02\x02\x02\u010C\u010D\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010D" +
		"\u010E\x03\x02\x02\x02\u010E\u010F\x03\x02\x02\x02\u010F\u0110\x05/\x18" +
		"\x02\u0110\u0111\x03\x02\x02\x02\u0111\u0112\b\"\x02\x02\u0112D\x03\x02" +
		"\x02\x02\u0113\u0114\x07u\x02\x02\u0114\u0115\x07v\x02\x02\u0115\u0116" +
		"\x07c\x02\x02\u0116\u0117\x07v\x02\x02\u0117\u0118\x07k\x02\x02\u0118" +
		"\u0119\x07e\x02\x02\u0119\u011B\x03\x02\x02\x02\u011A\u011C\x05)\x15\x02" +
		"\u011B\u011A\x03\x02\x02\x02\u011C\u011D\x03\x02\x02\x02\u011D\u011B\x03" +
		"\x02\x02\x02\u011D\u011E\x03\x02\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F" +
		"\u0120\x07x\x02\x02\u0120\u0121\x07q\x02\x02\u0121\u0122\x07k\x02\x02" +
		"\u0122\u0123\x07f\x02\x02\u0123\u0127\x03\x02\x02\x02\u0124\u0126\v\x02" +
		"\x02\x02\u0125\u0124\x03\x02\x02\x02\u0126\u0129\x03\x02\x02\x02\u0127" +
		"\u0125\x03\x02\x02\x02\u0127\u0128\x03\x02\x02\x02\u0128\u012A\x03\x02" +
		"\x02\x02\u0129\u0127\x03\x02\x02\x02\u012A\u012B\b#\x02\x02\u012BF\x03" +
		"\x02\x02\x02\u012C\u012D\x07%\x02\x02\u012D\u012E\x07k\x02\x02\u012E\u012F" +
		"\x07p\x02\x02\u012F\u0130\x07e\x02\x02\u0130\u0131\x07n\x02\x02\u0131" +
		"\u0132\x07w\x02\x02\u0132\u0133\x07f\x02\x02\u0133\u0134\x07g\x02\x02" +
		"\u0134\u0136\x03\x02\x02\x02\u0135\u0137\x05)\x15\x02\u0136\u0135\x03" +
		"\x02\x02\x02\u0137\u0138\x03\x02\x02\x02\u0138\u0136\x03\x02\x02\x02\u0138" +
		"\u0139\x03\x02\x02\x02\u0139\u013D\x03\x02\x02\x02\u013A\u013C\v\x02\x02" +
		"\x02\u013B\u013A\x03\x02\x02\x02\u013C\u013F\x03\x02\x02\x02\u013D\u013E" +
		"\x03\x02\x02\x02\u013D\u013B\x03\x02\x02\x02\u013E\u0140\x03\x02\x02\x02" +
		"\u013F\u013D\x03\x02\x02\x02\u0140\u0141\x05/\x18\x02\u0141\u0142\x03" +
		"\x02\x02\x02\u0142\u0143\b$\x02\x02\u0143H\x03\x02\x02\x02\u0144\u0145" +
		"\x07P\x02\x02\u0145\u0146\x07W\x02\x02\u0146\u0147\x07N\x02\x02\u0147" +
		"\u0148\x07N\x02\x02\u0148J\x03\x02\x02\x02\x19\x02rt\xA8\xB8\xBC\xBE\xC2" +
		"\xC6\xCC\xCE\xD1\xD6\xD9\xDD\xDF\xEB\u0102\u010D\u011D\u0127\u0138\u013D" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!UQMCommSourceDataLexer.__ATN) {
			UQMCommSourceDataLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(UQMCommSourceDataLexer._serializedATN));
		}

		return UQMCommSourceDataLexer.__ATN;
	}

}

